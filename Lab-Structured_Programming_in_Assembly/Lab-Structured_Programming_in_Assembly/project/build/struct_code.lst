


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- main.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P08 "Strukturierte Codierung" mit Assembler
   13 00000000         ; --
   14 00000000         ; -- $Id: struct_code.s 3787 2016-11-17 09:41:48Z kesr $
                       
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       ------------
   21 00000000         ; -- Address-Defines
   22 00000000         ; ------------------------------------------------------
                       ------------
   23 00000000         ; input
   24 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   25 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   26 00000000         
   27 00000000         ; output
   28 00000000 60000100 
                       ADDR_LED_31_0
                               EQU              0x60000100
   29 00000000 60000114 
                       ADDR_7_SEG_BIN_DS3_0
                               EQU              0x60000114
   30 00000000 60000340 
                       ADDR_LCD_COLOUR
                               EQU              0x60000340
   31 00000000 60000300 
                       ADDR_LCD_ASCII
                               EQU              0x60000300
   32 00000000 60000302 
                       ADDR_LCD_ASCII_BIT_POS
                               EQU              0x60000302
   33 00000000 60000314 



ARM Macro Assembler    Page 2 


                       ADDR_LCD_ASCII_2ND_LINE
                               EQU              0x60000314
   34 00000000 00000008 
                       S3_Mask EQU              0x00000008
   35 00000000         
   36 00000000         ; ------------------------------------------------------
                       ------------
   37 00000000         ; -- Program-Defines
   38 00000000         ; ------------------------------------------------------
                       ------------
   39 00000000         ; value for clearing lcd
   40 00000000 00000000 
                       ASCII_DIGIT_CLEAR
                               EQU              0x00000000
   41 00000000 00000028 
                       LCD_LAST_OFFSET
                               EQU              0x00000028
   42 00000000         
   43 00000000         ; offset for showing the digit in the lcd
   44 00000000 00000030 
                       ASCII_DIGIT_OFFSET
                               EQU              0x00000030
   45 00000000         
   46 00000000         ; lcd background colors to be written
   47 00000000 00000000 
                       DISPLAY_COLOUR_RED
                               EQU              0
   48 00000000 00000002 
                       DISPLAY_COLOUR_GREEN
                               EQU              2
   49 00000000 00000004 
                       DISPLAY_COLOUR_BLUE
                               EQU              4
   50 00000000         
   51 00000000         ; ------------------------------------------------------
                       ------------
   52 00000000         ; -- myConstants
   53 00000000         ; ------------------------------------------------------
                       ------------
   54 00000000                 AREA             myConstants, DATA, READONLY
   55 00000000         ; display defines for hex / dec
   56 00000000 42 69 74 
              20       DISPLAY_BIT
                               DCB              "Bit "
   57 00000004 32      DISPLAY_2_BIT
                               DCB              "2"
   58 00000005 34      DISPLAY_4_BIT
                               DCB              "4"
   59 00000006 38      DISPLAY_8_BIT
                               DCB              "8"
   60 00000007 00              ALIGN
   61 00000008         
   62 00000008         ; ------------------------------------------------------
                       ------------
   63 00000008         ; -- myCode
   64 00000008         ; ------------------------------------------------------
                       ------------
   65 00000008                 AREA             myCode, CODE, READONLY
   66 00000000                 ENTRY



ARM Macro Assembler    Page 3 


   67 00000000         
   68 00000000         ; imports for calls
   69 00000000                 import           adc_init
   70 00000000                 import           adc_get_value
   71 00000000         
   72 00000000         main    PROC
   73 00000000                 export           main
   74 00000000         ; 8 bit resolution, cont. sampling
   75 00000000 F7FF FFFE       BL               adc_init
   76 00000004 F000 F824       BL               clear_lcd
   77 00000008         
   78 00000008         main_loop
   79 00000008         ; STUDENTS: To be programmed
   80 00000008         ;Check if button is pressed
   81 00000008 481A            LDR              R0, =ADDR_BUTTONS
   82 0000000A 7800            LDRB             R0, [R0]
   83 0000000C 2101            MOVS             R1, #0x01
   84 0000000E 4208            TST              R0,R1       ; R0 && 1
   85 00000010 D119            BNE              button_pressed ; if and = 1 the
                                                            n Z = 0 so NE to te
                                                            st if 1
   86 00000012         
   87 00000012         
   88 00000012         
   89 00000012         display                              ;display adc value 
                                                            on 7 seg display
   90 00000012         ;call adc_get_value
   91 00000012 F7FF FFFE       BL               adc_get_value 
                                                            ;stores value in R0
                                                            
   92 00000016 0007            MOVS             R7, R0
   93 00000018 4B17            LDR              R3, =ADDR_7_SEG_BIN_DS3_0
   94 0000001A 601F            STR              R7, [R3]
   95 0000001C         
   96 0000001C 0039            MOVS             R1, R7
   97 0000001E 08C9            LSRS             R1, R1, #3
   98 00000020 2200            MOVS             R2, #0x0000
   99 00000022 4291            CMP              R1, R2
  100 00000024 D001            BEQ              make_one
  101 00000026 F000 F802       BL               calculate_bar_ones
  102 0000002A         make_one
  103 0000002A 1C52            ADDS             R2, R2, #0x01
  104 0000002C E004            B                make_led_bar
  105 0000002E         
  106 0000002E         calculate_bar_ones
  107 0000002E 4291            CMP              R1,R2
  108 00000030 D302            BLO              make_led_bar
  109 00000032 0052            LSLS             R2, R2, #0x01
  110 00000034 1C52            ADDS             R2, R2, #0x01
  111 00000036 E7FA            B                calculate_bar_ones
  112 00000038         
  113 00000038         make_led_bar
  114 00000038 4810            LDR              R0, =ADDR_LED_31_0
  115 0000003A 25FF            MOVS             R5, #0x00FF
  116 0000003C 402A            ANDS             R2, R2, R5
  117 0000003E 6002            STR              R2, [R0]
  118 00000040         
  119 00000040         
  120 00000040         



ARM Macro Assembler    Page 4 


  121 00000040         
  122 00000040         
  123 00000040         
  124 00000040         
  125 00000040         
  126 00000040         
  127 00000040         
  128 00000040         
  129 00000040         
  130 00000040         ; END: To be programmed
  131 00000040 E7E2            B                main_loop
  132 00000042         
  133 00000042         
  134 00000042         ;-------------------------------------------------------
                       --subroutines  
  135 00000042         adc_divide_by_eight
  136 00000042 08C8            LSRS             R0, R1, #3
  137 00000044 4770            BX               LR
  138 00000046         
  139 00000046         button_pressed
  140 00000046         ;set background of LCD to green
  141 00000046 480E            LDR              R0, =ADDR_LCD_COLOUR
  142 00000048 490E            LDR              R1, =0xffff
  143 0000004A 4A0F            LDR              R2, =DISPLAY_COLOUR_GREEN
  144 0000004C 5281            STRH             R1, [R0, R2]
  145 0000004E         
  146 0000004E E7E0            B                display
  147 00000050         ;-------------------------------------------------------
                       --------------------------------------------------------
                       --------------------------------------------------------
                       --------------------------------------------------------
                       --------------------------------------------------------
                       --------------------------------------------------------
                       ----------
  148 00000050         clear_lcd
  149 00000050 B407            PUSH             {R0, R1, R2}
  150 00000052 4A0E            LDR              R2, =0x0
  151 00000054         clear_lcd_loop
  152 00000054 480E            LDR              R0, =ADDR_LCD_ASCII
  153 00000056 1880            ADDS             R0, R0, R2  ; add index to lcd 
                                                            offset
  154 00000058 490C            LDR              R1, =ASCII_DIGIT_CLEAR
  155 0000005A 6001            STR              R1, [R0]
  156 0000005C 1D12            ADDS             R2, R2, #4  ; increas index by 
                                                            4 (word step)
  157 0000005E 2A28            CMP              R2, #LCD_LAST_OFFSET ; until in
                                                            dex reached last lc
                                                            d point
  158 00000060 D4F8            BMI              clear_lcd_loop
  159 00000062 BC07            POP              {R0, R1, R2}
  160 00000064 4770            BX               LR
  161 00000066         
  162 00000066         write_bit_ascii
  163 00000066 B403            PUSH             {R0, R1}
  164 00000068 480A            LDR              R0, =ADDR_LCD_ASCII_BIT_POS
  165 0000006A 490B            LDR              R1, =DISPLAY_BIT
  166 0000006C 6809            LDR              R1, [R1]
  167 0000006E 6001            STR              R1, [R0]
  168 00000070 BC03            POP              {R0, R1}



ARM Macro Assembler    Page 5 


  169 00000072 4770            BX               LR
  170 00000074         
  171 00000074                 ENDP
  172 00000074                 ALIGN
  173 00000074         
  174 00000074         
  175 00000074         ; ------------------------------------------------------
                       ------------
  176 00000074         ; End of code
  177 00000074         ; ------------------------------------------------------
                       ------------
  178 00000074                 END
              60000210 
              60000114 
              60000100 
              60000340 
              0000FFFF 
              00000002 
              00000000 
              60000300 
              60000302 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\struct_code.d -o.\build\struct_code.o -I.\RTE\_Target_1 -IC:\Users\Asha\App
Data\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\Asha\Ap
pData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\Ash
a\AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="__E
VAL SETA 1" --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA 1"
 --predefine="_RTE_ SETA 1" --list=.\build\struct_code.lst app\struct_code.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DISPLAY_2_BIT 00000004

Symbol: DISPLAY_2_BIT
   Definitions
      At line 57 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_2_BIT unused
DISPLAY_4_BIT 00000005

Symbol: DISPLAY_4_BIT
   Definitions
      At line 58 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_4_BIT unused
DISPLAY_8_BIT 00000006

Symbol: DISPLAY_8_BIT
   Definitions
      At line 59 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_8_BIT unused
DISPLAY_BIT 00000000

Symbol: DISPLAY_BIT
   Definitions
      At line 56 in file app\struct_code.s
   Uses
      At line 165 in file app\struct_code.s
Comment: DISPLAY_BIT used once
myConstants 00000000

Symbol: myConstants
   Definitions
      At line 54 in file app\struct_code.s
   Uses
      None
Comment: myConstants unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

adc_divide_by_eight 00000042

Symbol: adc_divide_by_eight
   Definitions
      At line 135 in file app\struct_code.s
   Uses
      None
Comment: adc_divide_by_eight unused
button_pressed 00000046

Symbol: button_pressed
   Definitions
      At line 139 in file app\struct_code.s
   Uses
      At line 85 in file app\struct_code.s
Comment: button_pressed used once
calculate_bar_ones 0000002E

Symbol: calculate_bar_ones
   Definitions
      At line 106 in file app\struct_code.s
   Uses
      At line 101 in file app\struct_code.s
      At line 111 in file app\struct_code.s

clear_lcd 00000050

Symbol: clear_lcd
   Definitions
      At line 148 in file app\struct_code.s
   Uses
      At line 76 in file app\struct_code.s
Comment: clear_lcd used once
clear_lcd_loop 00000054

Symbol: clear_lcd_loop
   Definitions
      At line 151 in file app\struct_code.s
   Uses
      At line 158 in file app\struct_code.s
Comment: clear_lcd_loop used once
display 00000012

Symbol: display
   Definitions
      At line 89 in file app\struct_code.s
   Uses
      At line 146 in file app\struct_code.s
Comment: display used once
main 00000000

Symbol: main
   Definitions
      At line 72 in file app\struct_code.s
   Uses
      At line 73 in file app\struct_code.s
Comment: main used once
main_loop 00000008




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: main_loop
   Definitions
      At line 78 in file app\struct_code.s
   Uses
      At line 131 in file app\struct_code.s
Comment: main_loop used once
make_led_bar 00000038

Symbol: make_led_bar
   Definitions
      At line 113 in file app\struct_code.s
   Uses
      At line 104 in file app\struct_code.s
      At line 108 in file app\struct_code.s

make_one 0000002A

Symbol: make_one
   Definitions
      At line 102 in file app\struct_code.s
   Uses
      At line 100 in file app\struct_code.s
Comment: make_one used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 65 in file app\struct_code.s
   Uses
      None
Comment: myCode unused
write_bit_ascii 00000066

Symbol: write_bit_ascii
   Definitions
      At line 162 in file app\struct_code.s
   Uses
      None
Comment: write_bit_ascii unused
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS3_0 60000114

Symbol: ADDR_7_SEG_BIN_DS3_0
   Definitions
      At line 29 in file app\struct_code.s
   Uses
      At line 93 in file app\struct_code.s
Comment: ADDR_7_SEG_BIN_DS3_0 used once
ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 25 in file app\struct_code.s
   Uses
      At line 81 in file app\struct_code.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 24 in file app\struct_code.s
   Uses
      None
Comment: ADDR_DIP_SWITCH_7_0 unused
ADDR_LCD_ASCII 60000300

Symbol: ADDR_LCD_ASCII
   Definitions
      At line 31 in file app\struct_code.s
   Uses
      At line 152 in file app\struct_code.s
Comment: ADDR_LCD_ASCII used once
ADDR_LCD_ASCII_2ND_LINE 60000314

Symbol: ADDR_LCD_ASCII_2ND_LINE
   Definitions
      At line 33 in file app\struct_code.s
   Uses
      None
Comment: ADDR_LCD_ASCII_2ND_LINE unused
ADDR_LCD_ASCII_BIT_POS 60000302

Symbol: ADDR_LCD_ASCII_BIT_POS
   Definitions
      At line 32 in file app\struct_code.s
   Uses
      At line 164 in file app\struct_code.s
Comment: ADDR_LCD_ASCII_BIT_POS used once
ADDR_LCD_COLOUR 60000340

Symbol: ADDR_LCD_COLOUR
   Definitions
      At line 30 in file app\struct_code.s
   Uses
      At line 141 in file app\struct_code.s
Comment: ADDR_LCD_COLOUR used once
ADDR_LED_31_0 60000100

Symbol: ADDR_LED_31_0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 28 in file app\struct_code.s
   Uses
      At line 114 in file app\struct_code.s
Comment: ADDR_LED_31_0 used once
ASCII_DIGIT_CLEAR 00000000

Symbol: ASCII_DIGIT_CLEAR
   Definitions
      At line 40 in file app\struct_code.s
   Uses
      At line 154 in file app\struct_code.s
Comment: ASCII_DIGIT_CLEAR used once
ASCII_DIGIT_OFFSET 00000030

Symbol: ASCII_DIGIT_OFFSET
   Definitions
      At line 44 in file app\struct_code.s
   Uses
      None
Comment: ASCII_DIGIT_OFFSET unused
DISPLAY_COLOUR_BLUE 00000004

Symbol: DISPLAY_COLOUR_BLUE
   Definitions
      At line 49 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_COLOUR_BLUE unused
DISPLAY_COLOUR_GREEN 00000002

Symbol: DISPLAY_COLOUR_GREEN
   Definitions
      At line 48 in file app\struct_code.s
   Uses
      At line 143 in file app\struct_code.s
Comment: DISPLAY_COLOUR_GREEN used once
DISPLAY_COLOUR_RED 00000000

Symbol: DISPLAY_COLOUR_RED
   Definitions
      At line 47 in file app\struct_code.s
   Uses
      None
Comment: DISPLAY_COLOUR_RED unused
LCD_LAST_OFFSET 00000028

Symbol: LCD_LAST_OFFSET
   Definitions
      At line 41 in file app\struct_code.s
   Uses
      At line 157 in file app\struct_code.s
Comment: LCD_LAST_OFFSET used once
S3_Mask 00000008

Symbol: S3_Mask
   Definitions
      At line 34 in file app\struct_code.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: S3_Mask unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

adc_get_value 00000000

Symbol: adc_get_value
   Definitions
      At line 70 in file app\struct_code.s
   Uses
      At line 91 in file app\struct_code.s
Comment: adc_get_value used once
adc_init 00000000

Symbol: adc_init
   Definitions
      At line 69 in file app\struct_code.s
   Uses
      At line 75 in file app\struct_code.s
Comment: adc_init used once
2 symbols
369 symbols in table
