


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- main.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P06 "ALU und Sprungbefehle" mit MUL
   13 00000000         ; --
   14 00000000         ; -- $Id: main.s 4857 2019-09-10 17:30:17Z akdi $
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       ------------
   21 00000000         ; -- Address Defines
   22 00000000         ; ------------------------------------------------------
                       ------------
   23 00000000         
   24 00000000 60000100 
                       ADDR_LED_7_0
                               EQU              0x60000100
   25 00000000 60000101 
                       ADDR_LED_15_8
                               EQU              0x60000101
   26 00000000 60000102 
                       ADDR_LED_31_16
                               EQU              0x60000102
   27 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   28 00000000 60000201 
                       ADDR_DIP_SWITCH_15_8
                               EQU              0x60000201
   29 00000000 60000114 
                       ADDR_7_SEG_BIN_DS3_0
                               EQU              0x60000114
   30 00000000 60000115 
                       ADDR_7_SEG_BIN_DS3_2
                               EQU              0x60000115
   31 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   32 00000000         



ARM Macro Assembler    Page 2 


   33 00000000 60000340 
                       ADDR_LCD_RED
                               EQU              0x60000340
   34 00000000 60000342 
                       ADDR_LCD_GREEN
                               EQU              0x60000342
   35 00000000 60000344 
                       ADDR_LCD_BLUE
                               EQU              0x60000344
   36 00000000 0000FFFF 
                       LCD_BACKLIGHT_FULL
                               EQU              0xffff
   37 00000000 00000000 
                       LCD_BACKLIGHT_OFF
                               EQU              0x0000
   38 00000000         
   39 00000000 0000000F 
                       BITMASK_UPPER
                               EQU              0x0f
   40 00000000 00000001 
                       MASK_KEY_T0
                               EQU              0x00000001
   41 00000000         
   42 00000000         
   43 00000000         ; ------------------------------------------------------
                       ------------
   44 00000000         ; -- myCode
   45 00000000         ; ------------------------------------------------------
                       ------------
   46 00000000                 AREA             myCode, CODE, READONLY
   47 00000000         
   48 00000000                 ENTRY
   49 00000000         
   50 00000000         main    PROC
   51 00000000                 export           main
   52 00000000         
   53 00000000         ; STUDENTS: To be programmed
   54 00000000         ;3.1
   55 00000000 4827            LDR              R0, =ADDR_LED_7_0
   56 00000002 4928            LDR              R1, =ADDR_LED_15_8
   57 00000004 4A28            LDR              R2, =ADDR_DIP_SWITCH_7_0
   58 00000006 4B29            LDR              R3, =ADDR_DIP_SWITCH_15_8
   59 00000008 4D29            LDR              R5, =BITMASK_UPPER
   60 0000000A 4E2A            LDR              R6, =ADDR_7_SEG_BIN_DS3_0
   61 0000000C 7812            LDRB             R2, [R2]
   62 0000000E 402A            ANDS             R2, R2, R5
   63 00000010 781B            LDRB             R3, [R3]
   64 00000012 402B            ANDS             R3, R3, R5
   65 00000014 011C            LSLS             R4, R3, #4
   66 00000016 18A4            ADDS             R4, R4, R2
   67 00000018 7004            STRB             R4, [R0]
   68 0000001A 7034            STRB             R4, [R6]
   69 0000001C         
   70 0000001C         ;Branch
   71 0000001C 4926            LDR              R1, =ADDR_BUTTONS
   72 0000001E 7809            LDRB             R1, [R1]
   73 00000020 2001            MOVS             R0, #0x01
   74 00000022 4201            TST              R1, R0
   75 00000024 D10C            BNE              mult_manuell



ARM Macro Assembler    Page 3 


   76 00000026         
   77 00000026         ;Multiplikation 
   78 00000026 481E            LDR              R0, =ADDR_LED_7_0
   79 00000028 491E            LDR              R1, =ADDR_LED_15_8
   80 0000002A 4D24            LDR              R5, =10
   81 0000002C 436B            MULS             R3, R5, R3
   82 0000002E 189C            ADDS             R4, R3, R2
   83 00000030 700C            STRB             R4, [R1]
   84 00000032         ;set background
   85 00000032 4F23            LDR              R7, =ADDR_LCD_RED
   86 00000034 4E23            LDR              R6, =LCD_BACKLIGHT_OFF
   87 00000036 803E            STRH             r6, [R7]
   88 00000038 4F23            LDR              R7, =ADDR_LCD_BLUE
   89 0000003A 4E24            LDR              R6, =LCD_BACKLIGHT_FULL
   90 0000003C 803E            STRH             R6, [R7]
   91 0000003E         ;manuelle multiplikation muss nun übersprungen werden
   92 0000003E E00C            B                skip_2nd_mul
   93 00000040         
   94 00000040         ;Multiplikation manuell = mit shift und add
   95 00000040         mult_manuell
   96 00000040         ;Adresse neu setzten, da R1 und R0 überschrieben wurden
   97 00000040 4817            LDR              R0, =ADDR_LED_7_0
   98 00000042 4918            LDR              R1, =ADDR_LED_15_8
   99 00000044         ;set background
  100 00000044 4F20            LDR              R7, =ADDR_LCD_BLUE
  101 00000046 4E1F            LDR              R6, =LCD_BACKLIGHT_OFF
  102 00000048 803E            STRH             R6, [R7]
  103 0000004A 4F1D            LDR              R7, =ADDR_LCD_RED
  104 0000004C 4E1F            LDR              R6, =LCD_BACKLIGHT_FULL
  105 0000004E 803E            STRH             R6, [R7]
  106 00000050         ;multiplikation mit shift und add
  107 00000050 00DD            LSLS             R5, R3, #3
  108 00000052 18ED            ADDS             R5, R5, R3
  109 00000054 18ED            ADDS             R5, R5, R3
  110 00000056 18AC            ADDS             R4, R5, R2
  111 00000058 700C            STRB             R4, [R1]
  112 0000005A         
  113 0000005A         skip_2nd_mul
  114 0000005A         
  115 0000005A 491D            LDR              R1, =ADDR_7_SEG_BIN_DS3_2
  116 0000005C 700C            STRB             R4, [R1]
  117 0000005E         
  118 0000005E         
  119 0000005E         ;and operator mit 000..1 -> falls ungleich null -> lefts
                       hift +1 auf dem zähler-> leftshift comparator -> loop up
                       
  120 0000005E 2101            MOVS             R1, #00000001
  121 00000060 4E18            LDR              R6, =0
  122 00000062 4F1C            LDR              R7, =8
  123 00000064         counterloop
  124 00000064 4D17            LDR              R5, =0
  125 00000066 0025            MOVS             R5, R4
  126 00000068 400D            ANDS             R5, R5, R1
  127 0000006A D001            BEQ              skip        ;skip if its not on
                                                            e, leftshift plus o
                                                            ne if it is a one
  128 0000006C 0076            LSLS             R6, R6, #1
  129 0000006E 1C76            ADDS             R6, R6, #0x01
  130 00000070         skip



ARM Macro Assembler    Page 4 


  131 00000070 0049            LSLS             R1, R1, #1
  132 00000072 1E7F            SUBS             R7, R7, #1
  133 00000074 D1F6            BNE              counterloop ;loop until all 8 b
                                                            its are evaluated
  134 00000076 4F18            LDR              R7, =ADDR_LED_31_16
  135 00000078 603E            STR              R6, [R7]
  136 0000007A         
  137 0000007A         ;copies the value in R6 to the left to have the value in
                        it twice to make sure the 32bit value can be displayed 
                       with 16bits
  138 0000007A 0032            MOVS             R2, R6
  139 0000007C 0436            LSLS             R6, R6, #16
  140 0000007E 18B6            ADDS             R6, R6, R2
  141 00000080 4A0B            LDR              R2, =15
  142 00000082         ;rotates to the right, makes a pause reduces counter (R6
                       ) by 1 to loop through it 15 times (1 full rotation, tec
                       hnically half a rotation of a word consisting of two equ
                       al halfwords, that looks like a full rotation on the 16 
                       bit display)
  143 00000082         repeat15
  144 00000082 4D16            LDR              R5, =1
  145 00000084 41EE            RORS             R6, R6, R5
  146 00000086 603E            STR              R6, [R7]
  147 00000088 F7FF FFFE       BL               pause
  148 0000008C 1E52            SUBS             R2, R2, #0x01
  149 0000008E D1F8            BNE              repeat15
  150 00000090         
  151 00000090         
  152 00000090         ; END: To be programmed
  153 00000090         
  154 00000090 E7FE            B                main
  155 00000092                 ENDP
  156 00000092         
  157 00000092         ;----------------------------------------------------
  158 00000092         ; Subroutines
  159 00000092         ;----------------------------------------------------
  160 00000092         
  161 00000092         ;----------------------------------------------------
  162 00000092         ; pause for disco_lights
  163 00000092         pause   PROC
  164 00000092 B403            PUSH             {R0, R1}
  165 00000094 4911            LDR              R1, =1
  166 00000096 4812            LDR              R0, =0x000FFFFF
  167 00000098         
  168 00000098         loop
  169 00000098 1A40            SUBS             R0, R0, R1
  170 0000009A D2FD            BCS              loop
  171 0000009C         
  172 0000009C BC03            POP              {R0, R1}
  173 0000009E 4770            BX               LR
  174 000000A0                 ALIGN
  175 000000A0                 ENDP
  176 000000A0         
  177 000000A0         ; ------------------------------------------------------
                       ------------
  178 000000A0         ; End of code
  179 000000A0         ; ------------------------------------------------------
                       ------------
  180 000000A0                 END



ARM Macro Assembler    Page 5 


              60000100 
              60000101 
              60000200 
              60000201 
              0000000F 
              60000114 
              60000210 
              0000000A 
              60000340 
              00000000 
              60000344 
              0000FFFF 
              60000115 
              00000008 
              60000102 
              00000001 
              000FFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\main.d -o.\build\main.o -I.\RTE\_Target_1 -IC:\Users\ashas\AppData\Local\Ar
m\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\ashas\AppData\Local\
Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\ashas\AppData\L
ocal\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA 1" --predefin
e="_RTE_ SETA 1" --list=.\build\main.lst app\main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

counterloop 00000064

Symbol: counterloop
   Definitions
      At line 123 in file app\main.s
   Uses
      At line 133 in file app\main.s
Comment: counterloop used once
loop 00000098

Symbol: loop
   Definitions
      At line 168 in file app\main.s
   Uses
      At line 170 in file app\main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 50 in file app\main.s
   Uses
      At line 51 in file app\main.s
      At line 154 in file app\main.s

mult_manuell 00000040

Symbol: mult_manuell
   Definitions
      At line 95 in file app\main.s
   Uses
      At line 75 in file app\main.s
Comment: mult_manuell used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 46 in file app\main.s
   Uses
      None
Comment: myCode unused
pause 00000092

Symbol: pause
   Definitions
      At line 163 in file app\main.s
   Uses
      At line 147 in file app\main.s
Comment: pause used once
repeat15 00000082

Symbol: repeat15
   Definitions
      At line 143 in file app\main.s
   Uses
      At line 149 in file app\main.s
Comment: repeat15 used once
skip 00000070




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: skip
   Definitions
      At line 130 in file app\main.s
   Uses
      At line 127 in file app\main.s
Comment: skip used once
skip_2nd_mul 0000005A

Symbol: skip_2nd_mul
   Definitions
      At line 113 in file app\main.s
   Uses
      At line 92 in file app\main.s
Comment: skip_2nd_mul used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS3_0 60000114

Symbol: ADDR_7_SEG_BIN_DS3_0
   Definitions
      At line 29 in file app\main.s
   Uses
      At line 60 in file app\main.s
Comment: ADDR_7_SEG_BIN_DS3_0 used once
ADDR_7_SEG_BIN_DS3_2 60000115

Symbol: ADDR_7_SEG_BIN_DS3_2
   Definitions
      At line 30 in file app\main.s
   Uses
      At line 115 in file app\main.s
Comment: ADDR_7_SEG_BIN_DS3_2 used once
ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 31 in file app\main.s
   Uses
      At line 71 in file app\main.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_15_8 60000201

Symbol: ADDR_DIP_SWITCH_15_8
   Definitions
      At line 28 in file app\main.s
   Uses
      At line 58 in file app\main.s
Comment: ADDR_DIP_SWITCH_15_8 used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 27 in file app\main.s
   Uses
      At line 57 in file app\main.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LCD_BLUE 60000344

Symbol: ADDR_LCD_BLUE
   Definitions
      At line 35 in file app\main.s
   Uses
      At line 88 in file app\main.s
      At line 100 in file app\main.s

ADDR_LCD_GREEN 60000342

Symbol: ADDR_LCD_GREEN
   Definitions
      At line 34 in file app\main.s
   Uses
      None
Comment: ADDR_LCD_GREEN unused
ADDR_LCD_RED 60000340




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: ADDR_LCD_RED
   Definitions
      At line 33 in file app\main.s
   Uses
      At line 85 in file app\main.s
      At line 103 in file app\main.s

ADDR_LED_15_8 60000101

Symbol: ADDR_LED_15_8
   Definitions
      At line 25 in file app\main.s
   Uses
      At line 56 in file app\main.s
      At line 79 in file app\main.s
      At line 98 in file app\main.s

ADDR_LED_31_16 60000102

Symbol: ADDR_LED_31_16
   Definitions
      At line 26 in file app\main.s
   Uses
      At line 134 in file app\main.s
Comment: ADDR_LED_31_16 used once
ADDR_LED_7_0 60000100

Symbol: ADDR_LED_7_0
   Definitions
      At line 24 in file app\main.s
   Uses
      At line 55 in file app\main.s
      At line 78 in file app\main.s
      At line 97 in file app\main.s

BITMASK_UPPER 0000000F

Symbol: BITMASK_UPPER
   Definitions
      At line 39 in file app\main.s
   Uses
      At line 59 in file app\main.s
Comment: BITMASK_UPPER used once
LCD_BACKLIGHT_FULL 0000FFFF

Symbol: LCD_BACKLIGHT_FULL
   Definitions
      At line 36 in file app\main.s
   Uses
      At line 89 in file app\main.s
      At line 104 in file app\main.s

LCD_BACKLIGHT_OFF 00000000

Symbol: LCD_BACKLIGHT_OFF
   Definitions
      At line 37 in file app\main.s
   Uses
      At line 86 in file app\main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 101 in file app\main.s

MASK_KEY_T0 00000001

Symbol: MASK_KEY_T0
   Definitions
      At line 40 in file app\main.s
   Uses
      None
Comment: MASK_KEY_T0 unused
15 symbols
359 symbols in table
